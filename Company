
/**
 * Write a description of class Company here.
 *
 * @author (your name)
 * @version (a version number or a date)
 */
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
public class Company
{
    private double initialMoney;
    private double money;
    private List <Products> products = new ArrayList<>();
    private double salesPrice;
    private double debt;
    private double profit;
    /**
     * Constructor for objects of class Company
     */
    public Company(double money)
    {
        this.money = money;
    }

    public Company(){
        Scanner scan = new Scanner(System.in);
        System.out.println("How much money does the Company have?");
        money = scan.nextDouble();
        initialMoney = money;
        initializeProducts("data.txt");
    }

    public double getMonthlyReport()
    {
        System.out.println("Profit" + getProfit());
        System.out.println("Debt" + getDebt());
        System.out.println("Current Cash" + getMoney());
        return money;
    }

    public double getMoney()
    {
        return money;
    }

    public void initializeProducts(String fileName){
        File file = new File(fileName);
        String data = "";
        int counter = 0;
        String name ="";
        int quantity = 0;
        int casePrice = 0;
        double salesPrice = 0.0;
        try {
            Scanner scanner = new Scanner(file);            
            while (scanner.hasNextLine()) {
                String line = scanner.nextLine();
                for(int i = 0; i < line.length(); i++){
                    if(line.charAt(i) == ','){
                        if(counter == 0){
                            name = data;
                        }
                        if(counter == 1){
                            quantity = Integer.parseInt(data);                            
                        }
                        if(counter == 2){
                            casePrice = Integer.parseInt(data);                            
                        }
                        data = "";
                        counter +=1;
                    }
                    else{
                        data += String.valueOf(line.charAt(i));     
                    }                                   
                }
                salesPrice = Double.parseDouble(data);
                data = "";
                counter = 0;
                Products product = new Products(name, quantity, casePrice, salesPrice);
                products.add(product);
            }
            scanner.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }

    public double getProfit()
    {
        return profit;
    }

    public void printProducts(){
        for(int i = 0; i < products.size(); i++){
            System.out.print((i + 1) + ". ");
            System.out.print(products.get(i));
            System.out.println();
        }
    }

    public void getInventory(){
                for(int i = 0; i < products.size(); i++){
            System.out.print((i + 1) + ". ");
            System.out.print(products.get(i).getName() + " " + products.get(i).getQuantity());
            System.out.println();
        }
    }
    
    public List <Products> getProducts(){
        return products;
    }

    public Products getProduct(int productNumber){
        return products.get(productNumber - 1);
    }

    public double getDebt()
    {
        return debt;
    }
    
    public void restock(Products product){
        money -= product.getPricePerCase();
        product.setQuantity(product.getQuantity() + product.getQuantityPerCase());
    }
    
    public double payDebt(double amount)
    {
        debt -= amount;
        if(debt % -1 == 0){
            money = -1 * debt;
            debt = 0;         
        }
        return debt;
    }
    
    public double calculateNetProfit(){
        double netMoney = money - initialMoney;
        return netMoney;
    }
    
    public int calculateAmtSold(){
        int amtSold = 0;
        for(int i = 0; i<products.size(); i++){
            amtSold += products.get(i).getAmtSold();            
        }
        return amtSold;
    }
    
    public void setMoney(double amt){
        money = amt;
    }
}
